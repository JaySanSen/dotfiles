" .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc

"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.

" map the leader key <leader>
let mapleader = ' '
" noremap <leader>cc :edit ~/.ideavimrc<cr>
map <leader>wf :write<cr>
map <leader>gd <Action>(GotoImplementation)
map <leader>bb <Action>(Back)
inoremap <C-k> <Up>
inoremap <C-j> <Down>

set scrolloff=5

" Set relative numbers for easier navigation
set rnu

" Do incremental searching.
set incsearch

" This will highlight the searched text. To undo highlight do :nohl
set hlsearch

" Make use of the system clipboard for copy pasting from and to other applications
" sync vim clipboard with OS clipboard
set clipboard^=unnamedplus,unnamed

" Not sure about this but stole it from some configuration
set history=1000

" This will remove the sounds when cursor hits the top or bottom of file while scrolling
set visualbell
set noerrorbells

" This will highlight selection when yank commands are executed
set highlightedyank
let g:highlightedyank_highlight_duration = 150
let g:highlightedyank_highlight_color = "rgba(133,165,214,255)"

" let g:highlightedyank_highlight_foreground_color = "rgba(0, 0, 0, 255)"

" jump between angle brackets with % just like how we jump to other bracket pairs
set matchpairs+=<:>

" smart join functionality
" set ideajoin

" Don't use Ex mode, use Q for formatting.
map Q gq

" To redo an action we need to press control + r, remapping this to U and u is undo
noremap U <C-r>

" Black whole register. This makes it so that when you press \ and then delete or perform an action like dd or dw,
" it will not save that in the regular buffer so you don't need to go back and copy the text again.
noremap \ "_


" paste without overwriting current buffer. If you select something and paste over it, it will replace the selected
" text however it will also copy the old text to the buffer so when you paste again it will be the old text. This
" keymap will avoid that
xnoremap p P


" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins

" Highlight copied text
" Plug 'machakann/vim-highlightedyank'
" Commentary plugin
" Plug 'tpope/vim-commentary'


"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)





" How do I map this to Ctrl J / Ctrl K for moving up and down between code selection? Couldn't find any Action Ids for this one

" This can be done in the default settings (outside your rc file). Go to settings > Keymap. Other > List Actions > Select Next Row. Add shortcut there.

" More generally, it is also possible to map Up/Down/Left/Right to Ctrl-[hjkl]. In Keymap: Editor Actions > Down. Using this, you can use Ctrl j/k to walk trough other lists as well. Like for instance the project explorer or a search menu.
" Try this in your .ideavimrc file:

" inoremap <c-k> <Up>
" inoremap <c-j> <Down>
